name: Android Tests
on:
  workflow_dispatch:

jobs:
  run-android-tests:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      jobstatus: ${{ steps.savedJobstatus.outputs.result }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'
          cache: 'gradle'

#      - name: Gradle cache
#        uses: gradle/gradle-build-action@v2
#
#      - name: AVD cache
#        uses: actions/cache@v3
#        id: avd-cache
#        with:
#          path: |
#            ~/.android/avd/*
#            ~/.android/adb*
#          key: avd-31
#
#      - name: create AVD and generate snapshot for caching
#        if: steps.avd-cache.outputs.cache-hit != 'true'
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 31
#          force-avd-creation: false
#          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          target: google_apis
#          arch: x86_64
#          disable-animations: false
#          ram-size: 1500M
#          heap-size: 2000M
#          disk-size: 5000M
#          script: echo "Generated AVD snapshot for caching."

      - name: Run Unit Tests
        run: ./gradlew test --stacktrace

#      - name: Run UI Tests
#        uses: ReactiveCircus/android-emulator-runner@v2
#        with:
#          api-level: 31
#          force-avd-creation: false #Cache
#          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none #Cache
#          target: google_apis
#          arch: x86_64
#          disable-animations: true
#          ram-size: 1500M
#          heap-size: 2000M
#          disk-size: 5000M
#          script: ./gradlew connectedCheck --stacktrace

      # Save job status
      - id: savedJobstatus
        run: |
          currentJobStatus=${{ job.status }}
          echo "result=$currentJobStatus" >> $GITHUB_OUTPUT

      - name: Upload Reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test-Reports
          path: app/build/reports

      #Upload unittest report
      - name: Upload Reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Unit-Test-Reports
          path: app/build/reports/tests/testDebugUnitTest

  slack-notification:
    if: always()
    runs-on: ubuntu-latest
    needs: run-android-tests

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: Unit-Test-Reports
          path: app/build/reports/tests/testDebugUnitTest

      - name: Display structure of downloaded files
       run: ls -R
       working-directory: app/build/reports/tests/testDebugUnitTest

      - name: Deploy Test Results to Github pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        if: always()
        with:
          folder: app/build/reports/tests/testDebugUnitTest # app/build/reports/androidTests/connected
          branch: github-pages # Branch to deploy pages to

      - name: Post Android Test results to Slack channel (espresso-testruns)
        uses: rtCamp/action-slack-notify@v2
        if: always()
        env:
          SLACK_CHANNEL: espresso-testruns
          SLACK_COLOR: ${{ needs.run-android-tests.outputs.jobstatus }}
          SLACK_TITLE: Android Tests results
          SLACK_MESSAGE: ${{ needs.run-android-tests.outputs.jobstatus }} - ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          SLACK_FOOTER: Latest UI Test Results - ${{ vars.ESPRESSO_TEST_RESULTS_URL }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}